{"version":3,"sources":["faucet/ChainSelector.jsx","faucet/Message.jsx","faucet/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["ChainSelector","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","options","setState","name","value","console","log","react_default","a","createElement","className","htmlFor","id","onChange","props","onChainSelectorChange","selected","map","x","key","Component","Message","message","show","error","success","trim","length","role","FaucetForm","onSubmit","e","preventDefault","request","chain","address","oThis","assertThisInitialized","body","beneficiary","concat","axios","method","url","crossdomain","data","headers","Content-Type","Access-Control-Allow-Origin","then","response","txHash","catch","toString","bind","onAddressChange","event","target","objectSpread","faucet_Message","faucet_ChainSelector","type","placeholder","onClick","App","src","alt","Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8248bac8.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass ChainSelector extends Component {\n\n  constructor() {\n    super();\n    this.state = {options: []};\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        options: [\n          {\n            name: \"Ropsten\",\n            value: \"3\"\n          },\n          {\n            name: \"1406\",\n            value: \"1406\"\n          },\n          {\n            name: \"1407\",\n            value: \"1407\"\n          }\n        ]\n      }\n    );\n  }\n\n  render() {\n\n    console.log(\"this .state\", this.state);\n\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\"\n                 htmlFor=\"inputGroupSelect01\">Select Chain</label>\n        </div>\n        <select className=\"custom-select\" id=\"inputGroupSelect01\"\n                onChange={this.props.onChainSelectorChange}>\n          <option selected value=\"\">Choose...</option>\n          {\n            this.state.options.map(x => <option key={x.value}\n                                                value={x.value}>{x.name}</option>)\n          }\n        </select>\n      </div>\n\n    );\n  }\n\n}\n\nexport default ChainSelector;","import React, {Component} from 'react';\n\nclass Message extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n\n    let message, show = false, className;\n\n    const error = this.props.error;\n    const success = this.props.success;\n\n    if (error && error.trim().length > 0) {\n      show = true;\n      message = error;\n      className = \"alert alert-danger\";\n    } else if (success && success.trim().length > 0) {\n      show = true;\n      message = success\n      className = \"alert alert-success\";\n    } else {\n      show = false;\n    }\n\n    const output = show && show === true ?\n      <div className={className} role=\"alert\">\n        {message}\n      </div> : \"\";\n    return output;\n\n  }\n}\n\nexport default Message;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport ChainSelector from \"./ChainSelector\";\nimport Message from \"./Message\";\n\nclass FaucetForm extends Component {\n\n  constructor() {\n    super();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChainSelectorChange = this.onChainSelectorChange.bind(this);\n    this.onAddressChange = this.onAddressChange.bind(this);\n    this.request = {};\n    this.state = {error: \"\", success: \"\"}\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Form submitted \", this.request);\n    if (!this.request.chain || this.request.chain.trim().length === 0) {\n      this.setState({error: \"Select a chain\"});\n      return;\n    } else if (!this.request.address || this.request.address.length !== 42) {\n      this.setState({error: `Invalid Address ${this.request.address ? this.request.address : \"\"}`});\n      return;\n    }\n\n    const oThis = this;\n\n    const body = {\n      beneficiary: `${this.request.address}@${this.request.chain}`\n    };\n\n    console.log(\"body  \", body);\n    axios({\n      method: 'post',\n      url: 'http://157.230.99.224:60500',\n      crossdomain: true,\n      data: body,\n      headers: {\n        \"Content-Type\":\"text/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n\n    })\n      .then(function (response) {\n        oThis.setState({\n          error: \"\",\n          success: `Funding request received txHash:${response.data.txHash}`\n        });\n      })\n      .catch(function (error) {\n        oThis.setState({error: error.toString(), success: \"\"});\n      })\n  };\n\n  onChainSelectorChange(event) {\n    console.log(\"event on chain change \", event.target.value);\n    this.request = {\n      ...this.request,\n      chain: event.target.value,\n    };\n    this.setState({error: \"\", success: \"\"});\n  };\n\n  onAddressChange(event) {\n    console.log(\"event on chain change \", event.target.value)\n    this.request = {\n      ...this.request,\n      address: event.target.value,\n    };\n    this.setState({error: \"\", success: \"\"});\n  };\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <Message error={this.state.error} success={this.state.success}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <ChainSelector\n                onChainSelectorChange={this.onChainSelectorChange}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <input type=\"text\" className=\"form-control input-group mb-3\"\n                     onChange={this.onAddressChange}\n                     id=\"inputAddress\"\n                     placeholder=\"Enter ethereum address\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <button type=\"submit\" onClick={this.onSubmit}\n                      className=\"btn btn-primary\">Fund\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n\n    );\n  }\n}\n\nexport default FaucetForm;","import React from 'react';\nimport './App.css';\nimport FaucetForm from \"./faucet/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"page-header\">\n\n        <h1 className=\"display-3\">\n          <img src=\"favicon-removebg.png\" alt=\"Italian Trulli\"/>\n            Mosaic Faucet\n        </h1>\n\n      </div>\n\n      <div className=\"container\">\n        <FaucetForm/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}